name: RAGnificent CI

permissions:
  contents: read

on:
  workflow_dispatch: {}
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --check

      - name: Clippy
        run: cargo clippy -- -D warnings

      - name: Check compilation
        run: cargo check --verbose

      - name: Run tests
        run: cargo test --verbose
      
      - name: Security audit for Rust dependencies
        run: |
          cargo install cargo-audit --features=fix || true
          cargo audit

  python-tests:
    name: Python ${{ matrix.python-version }} Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: uv venv .venv

      - name: Activate virtual environment
        run: echo ".venv/bin" >> $GITHUB_PATH

      - name: Install build dependencies
        run: .venv/bin/uv pip install maturin

      - name: Install project and dependencies
        run: |
          .venv/bin/uv pip install --upgrade pip
          .venv/bin/uv pip install .[dev,test]

      - name: Lint with ruff
        run: |
          .venv/bin/uv pip install ruff
          .venv/bin/ruff check .

      - name: Type check with mypy
        run: |
          .venv/bin/uv pip install mypy
          .venv/bin/mypy RAGnificent/

      - name: Run tests
        run: .venv/bin/python -m pytest -v --tb=short

      - name: Test package builds correctly
        run: |
          .venv/bin/uv pip install build
          .venv/bin/python -m build
      
      - name: Security scan with pip-audit
        run: |
          .venv/bin/uv pip install pip-audit
          .venv/bin/pip-audit
      
      - name: Security scan with bandit
        run: |
          .venv/bin/uv pip install bandit[toml]
          .venv/bin/bandit -r RAGnificent/ -ll
