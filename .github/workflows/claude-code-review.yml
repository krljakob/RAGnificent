name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # Uncomment to filter specific file patterns
    # paths:
    #   - "src/**/*.py"
    #   - "RAGnificent/**/*.py"
    #   - "**/*.rs"
    #   - "src/**/*.jsx"

# Cancel redundant runs for the same PR
concurrency:
  group: claude-review-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  claude-review:
    # Optional: Filter by PR author or skip conditions
    if: |
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[WIP]')
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Claude Code Review
        uses: anthropics/claude-code@v1
        with:
          # Your Anthropic API key
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Optional: Customize the review prompt
          system_prompt: |
            You are an expert code reviewer. Please review the code changes in this pull request and provide constructive feedback focusing on:
            - Code quality and best practices
            - Potential bugs or security issues
            - Performance considerations
            - Maintainability and readability
            - Testing coverage
            
            For Python code, pay special attention to:
            - Type hints and proper error handling
            - Following PEP 8 guidelines
            - Proper use of dependencies (requests, pydantic, etc.)
            
            For Rust code, focus on:
            - Memory safety and error handling
            - Proper use of PyO3 for Python bindings
            - Performance optimizations
          
          # Optional: Maximum tokens for the review
          max_tokens: 2000
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"